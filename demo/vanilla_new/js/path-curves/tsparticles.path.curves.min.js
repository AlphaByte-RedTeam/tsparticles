/*! tsParticles Curves Path v2.0.6 by Matteo Bruni */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("@tsparticles/engine"));else if("function"==typeof define&&define.amd)define(["@tsparticles/engine"],e);else{var o="object"==typeof exports?e(require("@tsparticles/engine")):e(t.window);for(var n in o)("object"==typeof exports?exports:t)[n]=o[n]}}(this,(function(t){return function(){"use strict";var e={383:function(e){e.exports=t}},o={};function n(t){var i=o[t];if(void 0!==i)return i.exports;var r=o[t]={exports:{}};return e[t](r,r.exports,n),r.exports}n.d=function(t,e){for(var o in e)n.o(e,o)&&!n.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var i={};return function(){n.r(i),n.d(i,{curvesPathName:function(){return o},loadCurvesPath:function(){return r}});var t=n(383);class e{constructor(){this.options={rndFunc:null,period:100,nbHarmonics:2,attenHarmonics:.8,lowValue:-.03,highValue:.03}}generate(e){if(void 0===e.pathGen){const t=this.options;e.pathGen=function(t,e,o,n,i=0,r=1){const c=[],s=[],a=[],u=[],l=[],p=null!=t?t:Math.random;let d=0;o<1&&(o=1);for(let t=1;t<=o;++t)c[t]=p(),s[t]=p(),a[t]=1===t?1:a[t-1]*n,d+=a[t],u[t]=t/e,l[t]=p();return a.forEach(((t,e)=>a[e]=t/d*(r-i))),()=>{let t,e,n=0;for(let i=o;i>=1;--i)t=l[i]+=u[i],l[i]>=1&&(t=l[i]-=1,c[i]=s[i],s[i]=p()),e=t**2*(3-2*t),n+=(c[i]*(1-e)+s[i]*e)*a[i];return n+i}}(t.rndFunc,t.period,t.nbHarmonics,t.attenHarmonics,t.lowValue,t.highValue)}return void 0===e.curveVelocity?(e.curveVelocity=t.Vector.origin,e.curveVelocity.length=.6*Math.random()+.8,e.curveVelocity.angle=Math.random()*Math.PI*2):(e.curveVelocity.length+=.01,e.curveVelocity.angle=(e.curveVelocity.angle+e.pathGen())%(2*Math.PI)),e.velocity.x=0,e.velocity.y=0,e.curveVelocity}init(t){var e,o,n,i,r;const c=t.actualOptions.particles.move.path.options;"function"==typeof c.rndFunc?this.options.rndFunc=c.rndFunc:"string"==typeof c.rndFunc&&(this.options.rndFunc=window[c.rndFunc]||this.options.rndFunc),this.options.period=null!==(e=c.period)&&void 0!==e?e:this.options.period,this.options.nbHarmonics=null!==(o=c.nbHarmonics)&&void 0!==o?o:this.options.nbHarmonics,this.options.attenHarmonics=null!==(n=c.attenHarmonics)&&void 0!==n?n:this.options.attenHarmonics,this.options.lowValue=null!==(i=c.lowValue)&&void 0!==i?i:this.options.lowValue,this.options.highValue=null!==(r=c.highValue)&&void 0!==r?r:this.options.highValue}update(){}}const o="curvesPathGenerator";function r(t){t.addPathGenerator(o,new e)}}(),i}()}));